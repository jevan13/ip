package yapper;/** * Represents a Parser, which takes in a command in String, parses it, and calls the respective command. */public class Parser {    private final TaskList taskList;    /**     * Creates an instance of Parser.     *     * @param taskList Tasklist to call after parsing commands.     */    public Parser(TaskList taskList) {        this.taskList = taskList;    }    /**     * Reads the command given by user.     *     * @param command Command given by user.     */    public void readCommand(String command) {        try {            if (command.equals("bye")) {                this.taskList.exit();                System.exit(0);            } else if (command.equals("list")) {                this.taskList.returnList();            } else if (command.startsWith("mark")) {                this.taskList.mark(command);            } else if (command.startsWith("unmark")) {                this.taskList.unmark(command);            } else if (command.startsWith("todo")) {                this.taskList.addToDo(command);            } else if (command.startsWith("deadline")) {                this.taskList.addDeadline(command);            } else if (command.startsWith("event")) {                this.taskList.addEvent(command);            } else if (command.startsWith("delete")) {                this.taskList.deleteTask(command);            } else if (command.startsWith("find")) {                this.taskList.findTask(command);            } else {                throw new YapperException("Yapper don't know this command :(");            }        } catch (YapperException e) {            System.out.println(e.getMessage());        }    }}